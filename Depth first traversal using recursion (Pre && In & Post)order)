#include<iostream>
using namespace std;
struct bstnode{
    int data;
    bstnode* left;
    bstnode* right;
};
bstnode* getnewnode(int data){
    bstnode* node=new bstnode();
    node->data=data;
    node->left=node->right=nullptr;
    return node;
}
bstnode* insert(bstnode* root, int data){
    if(root==nullptr)
    root=getnewnode(data);
    
    else if(data<=(root->data))
    root->left=insert(root->left,data);
    
    else
    root->right=insert(root->right,data);
    
    return root;
}
void preorder_traversal(bstnode* root){
    if(root==nullptr)
    return;
    cout<<" "<<root->data;
    
    preorder_traversal(root->left);
    preorder_traversal(root->right);
}
void inorder_traversal(bstnode* root){
    if(root==nullptr)
    return;
    
    inorder_traversal(root->left);
    cout<<" "<<root->data;
    
    inorder_traversal(root->right);
}
void postorder_traversal(bstnode* root){
    if(root==nullptr)
    return;
    
    postorder_traversal(root->left);
    
    postorder_traversal(root->right);
    cout<<" "<<root->data;
}
int main(){
    bstnode* root=nullptr;
    root=insert(root,15);
    root=insert(root,10);
    root=insert(root,20);
    root=insert(root,12);
    root=insert(root,25);
    cout<<"Preorder traversal of BST is: ";
    preorder_traversal(root);
    cout<<"\nInorder traversal of BST is: ";
    inorder_traversal(root);
    cout<<"\nPostorder traversal of BST is: ";
    postorder_traversal(root);
}    
/*
Preorder traversal of BST is:  15 10 12 20 25
Inorder traversal of BST is:  10 12 15 20 25
Postorder traversal of BST is:  12 10 25 20 15
*/
