#include<iostream>
using namespace std;
struct bstnode{
    int data;
    bstnode* left;
    bstnode* right;
};
bstnode* getnewnode(int data){
    bstnode* node=new bstnode();
    node->data=data;
    node->left=node->right=nullptr;
    return node;
}
bstnode* insert(bstnode* root, int data){
    if(root==nullptr)
    root=getnewnode(data);
    
    else if(data<=(root->data))
    root->left=insert(root->left,data);
    
    else
    root->right=insert(root->right,data);
    
    return root;
}
bool search(bstnode* root, int num){
    if(root==nullptr)
    return false;
    
    else if(root->data==num)
    return true;
    
    else if(num<=root->data)
    return search(root->left, num);
    
    else
    return search(root->right, num);
}
int main(){
    bstnode* root=nullptr;
    root=insert(root,15);
    root=insert(root,10);
    root=insert(root,20);
    root=insert(root,12);
    root=insert(root,25);
    int num;
    cout<<"Enter number to be searched: ";
    cin>>num;
    if(search(root,num))
    cout<<"\nFound "<<num;
    else
    cout<<"\nNot in Tree!";
}

/*
Enter number to be searched: 5
Not in Tree!

Enter number to be searched: 12
Found 12
*/
